"""Updated teacher model to set some fields to not accept null

Revision ID: 813dc87f5090
Revises: 5765a2b1b3ca
Create Date: 2025-07-24 22:15:18.731513

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "813dc87f5090"
down_revision: Union[str, Sequence[str], None] = "5765a2b1b3ca"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('unique_active_academic_year', table_name='academic_years', postgresql_where='(is_active = true)')
    op.alter_column(
        "teachers", "first_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("teachers", "last_name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("teachers", "gender", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("teachers", "contact", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("teachers", "status", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "teachers", "specialization", existing_type=sa.VARCHAR(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "teachers", "specialization", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("teachers", "status", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("teachers", "contact", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("teachers", "gender", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("teachers", "last_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("teachers", "first_name", existing_type=sa.VARCHAR(), nullable=True)
    op.create_index(
        "unique_active_academic_year",
        "academic_years",
        ["is_active"],
        unique=True,
        postgresql_where="(is_active = true)",
    )
    # ### end Alembic commands ###
