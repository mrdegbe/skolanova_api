"""Replace years with academic_years

Revision ID: e9812cef77e4
Revises: ca53239269a5
Create Date: 2025-07-22 12:01:42.562219

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e9812cef77e4"
down_revision: Union[str, Sequence[str], None] = "ca53239269a5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1️⃣ Add the new column first
    op.add_column("results", sa.Column("academic_year_id", sa.Integer(), nullable=True))

    # 2️⃣ Drop the old FK before dropping the column/table
    op.drop_constraint("results_year_id_fkey", "results", type_="foreignkey")

    # 3️⃣ Drop the old column
    op.drop_column("results", "year_id")

    # 4️⃣ Create new FK
    op.create_foreign_key(
        "results_academic_year_id_fkey",
        "results",
        "academic_years",
        ["academic_year_id"],
        ["id"],
    )

    # 5️⃣ Drop index before dropping table
    op.drop_index("ix_years_id", table_name="years")

    # 6️⃣ Now safe to drop the old table
    op.drop_table("years")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "results",
        sa.Column("year_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "results", type_="foreignkey")
    op.create_foreign_key(
        "results_year_id_fkey", "results", "years", ["year_id"], ["id"]
    )
    op.drop_column("results", "academic_year_id")
    op.create_table(
        "years",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("year", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="years_pkey"),
        sa.UniqueConstraint("year", name="years_year_key"),
    )
    op.create_index("ix_years_id", "years", ["id"], unique=False)
    # ### end Alembic commands ###
